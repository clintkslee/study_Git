* branch 생성

git branch
로컬저장소 브랜치 확인

git branch -r
원격저장소 브랜치 확인

git branch -a
모든 브랜치 확인(로컬, 원격)

git branch mybranch
로컬저장소에 브랜치 생성

* branch 전환

git checkout mybranch
mybranch로 브랜치 전환

git checkout -b mybranch2
mybranch2 브랜치 생성 후 mybranch2로 브랜치 전환

* branch 삭제

git checkout mybranch
브랜치 삭제 위해서 다른 브랜치로 전환

git branch -d mybranch2
mybranch2 브랜치 삭제

* 특정 branch 에 push 하는법

git commit origin mybranch
원격저장소 origin의 mybranch 브랜치에 push (로컬브랜치명도 mybranch여야 함)

git commit origin mybranch:main
로컬저장소의 mybranch 브랜치에서 원격저장소 origin의 main 브랜치에 push


* merge 방법

1. git checkout main
주가 될 브랜치로 전환

2. git merge mybranch
main에 mybranch 병합

3. git branch -d mybranch
필요없어진 mybranch 삭제

4. git push origin main
원격 저장소에 반영
-> 이 경우 로컬저장소에서 merge후 원격저장소 main 브랜치에 push 한 상황
-> 그러나 협업 시 개발자들은 각자 자신의 브랜치에 push 후 원격저장소에서 merge한다.

* 협업 시 branch 사용 

1. 개발자는 원격저장소의 main 브랜치를 pull
git pull origin main

2. 로컬에서 새로운 브랜치 생성하여 작업
git checkout -b mybranch3

3. 작업 완료 후 원격저장소에 push
git push -u origin mybranch3 (원격저장소에 새 브랜치 생성된다.)

4. 동료들과 코드 리뷰 후 github 상에서 main브랜치와 mybranch3를 merge
- 상단 메뉴에서 "Pull requests" 탭 선택
- "New pull request" 버튼 클릭
- 비교할 브랜치 선택
	"base" 브랜치 : main브랜치 선택
	"compare" 브랜치 : mybranch3 선택
- 변경 사항 검토, 제목 및 설명 입력
- "Create pull request" 버튼 클릭
- 원격저장소 소유자가 해당 Pull Request 검토, 승인 시 병합 수행

5. 원격저장소 관리를 위해 필요없어진 mybranch3 삭제
git push origin -d mybranch3 (혹은 로컬에서 main을 pull 후 mybranch3로 push하여 원격상의 mybranch3를 최신상태(=main)로 유지하는 방법도 있으나 굳이..?)













